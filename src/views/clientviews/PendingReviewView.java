package views.clientviews;

import controllers.BaseController;
import controllers.ForeignController;
import inevaup.dialogs.InfoDialog;
import inevaup.dialogs.WarningDialog;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import pseudofiles.PseudoFile;
import vetapp.AuthManager;
import views.clientviews.formviews.ReviewViewForm;

public class PendingReviewView extends javax.swing.JPanel {

    private final BaseController controller;
    
    public PendingReviewView() {
        initComponents();
        
        PseudoFile pseudoFile = new PseudoFile(
            new File("data/reviews_pendientes.csv"), 
            new String[]{"idCita", "cedVet", "clientCed"}
        );

        controller = new ForeignController(
            (DefaultTableModel) appo_table.getModel(), 
            pseudoFile,
            "clientCed",
            AuthManager.getAuth().getAuthData().get("cedula")
        );
        
        updateTable();
    }
    
    private void updateTable(){
        try {
            controller.updateTable();
        } catch (IOException e) {
            fileExceptionDialog();
        }
    }

    private void fileExceptionDialog(){
        InfoDialog dialog = new InfoDialog(null, "Error", 
            "Un error inesperado acaba de ocurrir", InfoDialog.TypeInfoDialog.ERROR_DIALOG
        );
        dialog.setVisible(true);
    }

    private void pickARowDialog(){
        InfoDialog dialog = new InfoDialog(null, "Ninguna fila selecionada", 
            "Por favor seleciona un registro", 
            InfoDialog.TypeInfoDialog.INFO_DIALOG
        );
        dialog.setVisible(true);
    }
    
    private boolean deleteWarningDialog(){
        WarningDialog dialog = new WarningDialog(null, "Advertencia", 
            "¿Está seguro de eliminar el registro?"
        );
        dialog.setVisible(true);
        return dialog.IsWarningAccepted();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        card_content_layout = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        add_button = new javax.swing.JButton();
        delete_button = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        appo_table = new javax.swing.JTable();

        card_content_layout.setBackground(new java.awt.Color(247, 249, 249));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 10));

        add_button.setBackground(new java.awt.Color(64, 145, 108));
        add_button.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        add_button.setForeground(new java.awt.Color(255, 255, 255));
        add_button.setText("Aceptar Review");
        add_button.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 25, 10, 25));
        add_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onAdd(evt);
            }
        });
        jPanel1.add(add_button);

        delete_button.setBackground(new java.awt.Color(64, 145, 108));
        delete_button.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        delete_button.setForeground(new java.awt.Color(255, 255, 255));
        delete_button.setText("Eliminar Review");
        delete_button.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 25, 10, 25));
        delete_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_buttononDelete(evt);
            }
        });
        jPanel1.add(delete_button);

        appo_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idCita", "cedVet"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(appo_table);

        javax.swing.GroupLayout card_content_layoutLayout = new javax.swing.GroupLayout(card_content_layout);
        card_content_layout.setLayout(card_content_layoutLayout);
        card_content_layoutLayout.setHorizontalGroup(
            card_content_layoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(card_content_layoutLayout.createSequentialGroup()
                .addGroup(card_content_layoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(card_content_layoutLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(card_content_layoutLayout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        card_content_layoutLayout.setVerticalGroup(
            card_content_layoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, card_content_layoutLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(card_content_layout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(card_content_layout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void onAdd(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onAdd
        int row = appo_table.getSelectedRow();
        if (row != -1){
            HashMap<String, String> currData = controller.getDataFromRow(row);
            String cedVet = currData.get("cedVet");
            ReviewViewForm dialogForm = new ReviewViewForm(
                (JFrame) SwingUtilities.getWindowAncestor(this), true
            );
            dialogForm.setClientCed(AuthManager.getAuth().getAuthData().get(("cedula")));
            dialogForm.setCedVet(cedVet);
            dialogForm.setVisible(true);
        }else{
            pickARowDialog();
        }
    }//GEN-LAST:event_onAdd

    private void delete_buttononDelete(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_buttononDelete
        int row = appo_table.getSelectedRow();
        if (row != -1){
            if(deleteWarningDialog()){
                try {
                    controller.getTableModel().removeRow(row);
                    controller.reWriteFile();
                } catch (IOException e) {
                    fileExceptionDialog();
                }
            }
        }else{
            pickARowDialog();
        }
    }//GEN-LAST:event_delete_buttononDelete


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_button;
    private javax.swing.JTable appo_table;
    private javax.swing.JPanel card_content_layout;
    private javax.swing.JButton delete_button;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
